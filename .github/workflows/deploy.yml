name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev default-libmysqlclient-dev build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mysqlclient
          pip install -r requirements.txt

      - name: Create temporary settings for tests
        run: |
          mkdir -p /tmp/test_settings
          cat > /tmp/test_settings/test_settings.py << 'EOL'
          from courseapp.settings import *

          # Override database settings for tests
          DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.mysql',
                  'NAME': 'test_db',
                  'USER': 'root',
                  'PASSWORD': 'root',
                  'HOST': '127.0.0.1',  # Use TCP/IP connection instead of socket
                  'PORT': '3306',
                  'TEST': {
                      'NAME': 'test_db',
                      'CHARSET': 'utf8mb4',
                      'COLLATION': 'utf8mb4_unicode_ci',
                  },
                  'OPTIONS': {
                      'charset': 'utf8mb4',
                      'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
                  },
              }
          }

          # Disable some optional apps if needed for tests
          # Example: INSTALLED_APPS.remove('some_problematic_app')

          # Use in-memory file storage for tests
          DEFAULT_FILE_STORAGE = 'django.core.files.storage.InMemoryStorage'

          # Speed up password hashing in tests
          PASSWORD_HASHERS = [
              'django.contrib.auth.hashers.MD5PasswordHasher',
          ]

          # Disable migrations for tests
          class DisableMigrations:
              def __contains__(self, item):
                  return True
              def __getitem__(self, item):
                  return None
                  
          MIGRATION_MODULES = DisableMigrations()
          EOL

      - name: Run Tests
        env:
          DJANGO_SETTINGS_MODULE: test_settings
          PYTHONPATH: "/tmp/test_settings:${{ github.workspace }}"
        run: |
          # Wait for MySQL to be ready
          sleep 5

          # Test database connection
          python -c "import MySQLdb; MySQLdb.connect(host='127.0.0.1', user='root', passwd='root', db='test_db', port=3306)"

          # Run Django tests
          python manage.py test --keepdb

          # If you need to specify specific apps to test
          # python manage.py test your_app1 your_app2 --keepdb

  deploy:
    # Comment out the next line to skip test dependency if needed
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /var/www/bhavani
            ./deploy.sh

name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug Environment
        run: |
          echo "=== Environment Debug ==="
          pwd
          whoami
          echo "HOME: $HOME"
          echo "=== Secrets Check ==="
          echo "SSH_KEY exists: $([[ -n '${{ secrets.SSH_KEY }}' ]] && echo 'Yes' || echo 'No')"
          echo "SSH_KEY length: ${#SSH_KEY}"
          echo "HOST: ${{ secrets.HOST }}"
          echo "PORT: ${{ secrets.PORT }}"
          echo "USERNAME: ${{ secrets.USERNAME }}"
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Setup SSH directory
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Setup SSH key
        run: |
          echo "Setting up SSH key..."
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          echo "SSH key setup complete"

      - name: Test SSH connection
        run: |
          echo "Testing SSH connection..."
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} -p ${{ secrets.PORT }} "echo 'SSH connection successful'"

      - name: Deploy to server
        run: |
          echo "Starting deployment..."
          
          # Create a tarball of the project
          tar -czf project.tar.gz ./*

          # Copy the tarball to the server
          scp -i ~/.ssh/id_rsa -P ${{ secrets.PORT }} -o StrictHostKeyChecking=no project.tar.gz ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/var/www/bhavani/project.tar.gz

          # Extract and run deployment
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} -p ${{ secrets.PORT }} << 'EOF'
            cd /var/www/bhavani
            tar -xzf project.tar.gz && rm project.tar.gz
            chmod +x deploy.sh
            ./deploy.sh
          EOF

          echo "Deployment completed!"

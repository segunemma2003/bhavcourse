name: Deploy with Migration Fix

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DEBUG=False" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}" >> .env
          echo "RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}" >> .env
          echo "RAZORPAY_CURRENCY=INR" >> .env

      - name: Run migration conflict fix
        run: |
          chmod +x pipeline_migration_fix.sh
          ./pipeline_migration_fix.sh

      - name: Collect static files
        run: python manage.py collectstatic --noinput

      - name: Run tests
        run: python manage.py test

      - name: Deploy to server
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          # Add your deployment commands here
          # For example, using rsync, scp, or deployment tools
          echo "Deploying to production server..."
          # rsync -avz --exclude='.git' --exclude='venv' ./ user@server:/path/to/app/

      - name: Restart services
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          # Add your service restart commands here
          echo "Restarting services..."
          # ssh user@server "sudo systemctl restart gunicorn"
          # ssh user@server "sudo systemctl restart nginx"
